name: Deploy to production

on:
  release:
    types: [published]

jobs:
  build-image-push:
    name: Build image and push to Docker Hub
    runs-on: ubuntu-latest
    concurrency: build
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3
      - name: Prepare
        id: prep
        run: |
          TAG=$(echo ${GITHUB_REF:10})
          IMAGE="mammuthosting/rheinkultur-wawi"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG}
          echo ::set-output name=tag::${TAG}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx

      - name: Build production image
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  create-secrets:
    name: Create secrets
    runs-on: ubuntu-latest
    concurrency: secrets
    steps:
      - name: Generate secrets
        run: |
          mkdir ./secrets
          echo "$ENVFILE" > ./secrets/env
          echo "$GOOGLEKEY" > ./secrets/googlekey
        env:
          ENVFILE: ${{ secrets.ENV }}
          GOOGLEKEY: ${{ secrets.GOOGLEKEY }}

      - name: Generate kubeconfig
        run: |
          mkdir $HOME/.kube
          echo "$KUBECONFIG" > $HOME/.kube/config
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Install kubectl
        uses: azure/setup-kubectl@7f7e5ba5ea3e491b92e6e8e5819963f8f3a1f076 # tag=v3

      - name: Use context
        run: kubectl config use-context ac0

      - name: Ensure namespace exits
        run: kubectl get namespace | grep -q "^rheinkultur-wawi " || kubectl create namespace rheinkultur-wawi

      - name: Recreate secrets
        run: |
          kubectl delete secret rheinkultur-wawi-env -n rheinkultur-wawi --ignore-not-found
          kubectl create secret generic rheinkultur-wawi-env --from-env-file=./secrets/env -n rheinkultur-wawi
          kubectl delete secret rheinkultur-wawi-googlekey -n rheinkultur-wawi --ignore-not-found
          kubectl create secret generic rheinkultur-wawi-googlekey --from-file=./secrets/googlekey -n rheinkultur-wawi

  deploy:
    needs: [build-image-push, create-secrets]
    runs-on: ubuntu-latest
    concurrency: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3

      - name: Prepare
        id: prep
        run: |
          TAG=$(echo ${GITHUB_REF:10})
          IMAGE="mammuthosting/rheinkultur-wawi"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG}
          echo ::set-output name=tag::${TAG}

      - name: Generate kubeconfig
        run: |
          mkdir $HOME/.kube
          echo "$KUBECONFIG" > $HOME/.kube/config
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Install kubectl
        uses: azure/setup-kubectl@7f7e5ba5ea3e491b92e6e8e5819963f8f3a1f076 # tag=v3

      - name: Use context
        run: kubectl config use-context ac0

      - name: Install Helm
        uses: azure/setup-helm@f382f75448129b3be48f8121b9857be18d815a82 # tag=v3

      - name: Add helm repo
        run: |
          helm repo add mammut-helm https://mammutmedia.github.io/helm-charts/
          helm repo update

      - name: Deploy rheinkultur-wawi
        run: |
          helm upgrade -f ./.github/values.yaml rheinkultur-wawi mammut-helm/rheinkultur-wawi -n rheinkultur-wawi --set image.tag="${{ steps.prep.outputs.tag }}" --create-namespace --install --atomic --wait --timeout=5m0s
          kubectl -f ./.github/exports.yaml -n rheinkultur-wawi
          kubectl -f ./.github/webhooks.yaml -n rheinkultur-wawi
